{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to AiluroCamp Documentation","text":"<p>AiluroCamp is a comprehensive Learning Management System (LMS) designed to facilitate online education through a role-based platform.</p>"},{"location":"#about-ailurocamp","title":"About AiluroCamp","text":"<p>AiluroCamp LMS supports three user roles:</p> <ul> <li>Students: Can enroll in courses, complete assignments, track progress, and earn certificates</li> <li>Instructors: Can create and manage courses, assignments, and track student performance</li> <li>Administrators: Have full system access to manage users, courses, and platform settings</li> </ul> <p>The application features a responsive UI built with Tailwind CSS and follows modern web development best practices.</p>"},{"location":"#documentation-overview","title":"Documentation Overview","text":"<p>This documentation is organized into the following sections:</p>"},{"location":"#setup-guide","title":"Setup Guide","text":"<p>Detailed instructions for setting up the AiluroCamp Learning Management System for development and deployment.</p> <ul> <li>Development environment setup</li> <li>Installation steps</li> <li>Configuration options</li> <li>Deployment instructions</li> </ul>"},{"location":"#user-guide","title":"User Guide","text":"<p>Comprehensive instructions for using the AiluroCamp LMS for all user roles.</p> <ul> <li>Student features</li> <li>Instructor features</li> <li>Administrator features</li> <li>Common functionality</li> </ul>"},{"location":"#api-documentation","title":"API Documentation","text":"<p>Details about the API endpoints available in the AiluroCamp Learning Management System.</p> <ul> <li>Authentication endpoints</li> <li>User management endpoints</li> <li>Course management endpoints</li> <li>Assignment management endpoints</li> </ul>"},{"location":"#architecture","title":"Architecture","text":"<p>Technical overview of the AiluroCamp Learning Management System architecture.</p> <ul> <li>System design</li> <li>Core components</li> <li>Data flow</li> <li>Security considerations</li> </ul>"},{"location":"#typescript-type-system","title":"TypeScript Type System","text":"<p>Explanation of the type system used in AiluroCamp and how we leverage TypeScript for type safety.</p> <ul> <li>Types folder structure</li> <li>Key type definitions</li> <li>Type safety best practices</li> <li>MongoDB and Mongoose types</li> </ul>"},{"location":"#tech-stack","title":"Tech Stack","text":"<p>AiluroCamp is built with modern web technologies:</p> <ul> <li>Frontend: Next.js 14 with App Router, React, TypeScript</li> <li>Styling: Tailwind CSS</li> <li>Authentication: NextAuth.js with JWT</li> <li>Database: MongoDB with Mongoose ODM</li> <li>Deployment: GitHub Pages (static export) with separate API deployment</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To get started with AiluroCamp, head over to the Setup Guide for installation instructions.</p>"},{"location":"USER_GUIDE/","title":"AiluroCamp LMS User Guide","text":"<p>This guide provides instructions for using the AiluroCamp Learning Management System for all user roles: students, instructors, and administrators.</p>"},{"location":"USER_GUIDE/#getting-started","title":"Getting Started","text":""},{"location":"USER_GUIDE/#creating-an-account","title":"Creating an Account","text":"<ol> <li>Navigate to the AiluroCamp homepage</li> <li>Click the \"Get Started\" button</li> <li>Fill out the registration form with your name, email, and password</li> <li>Click \"Register\" to create your account</li> <li>You will be redirected to the login page with a confirmation message</li> </ol>"},{"location":"USER_GUIDE/#logging-in","title":"Logging In","text":"<ol> <li>Navigate to the login page</li> <li>Enter your email and password</li> <li>Click \"Sign in\" to access your dashboard</li> <li>If you have multiple roles, you'll be directed to the dashboard for your current role</li> </ol>"},{"location":"USER_GUIDE/#switching-roles","title":"Switching Roles","text":"<p>If you have multiple roles (e.g., both instructor and student):</p> <ol> <li>Click on your current role in the top-right corner of the dashboard</li> <li>Select the role you want to switch to from the dropdown menu</li> <li>The page will refresh and display the dashboard for your selected role</li> </ol>"},{"location":"USER_GUIDE/#student-features","title":"Student Features","text":""},{"location":"USER_GUIDE/#dashboard","title":"Dashboard","text":"<p>The student dashboard provides an overview of your learning progress:</p> <ul> <li>Active Courses: Shows the number of courses you're currently enrolled in</li> <li>Pending Assignments: Displays assignments that need to be completed</li> <li>Overall Progress: Shows your progress across all courses</li> <li>Recent Activity: Lists your recent actions in the system</li> </ul>"},{"location":"USER_GUIDE/#courses","title":"Courses","text":"<p>To view and manage your courses:</p> <ol> <li>Click \"Courses\" in the navigation menu</li> <li>Browse available courses or view your enrolled courses</li> <li>Click on a course to view its details and content</li> </ol>"},{"location":"USER_GUIDE/#enrolling-in-a-course","title":"Enrolling in a Course","text":"<ol> <li>Navigate to the course catalog</li> <li>Find a course you're interested in</li> <li>Click \"Enroll\" to add the course to your dashboard</li> <li>You'll now have access to all course materials and assignments</li> </ol>"},{"location":"USER_GUIDE/#completing-assignments","title":"Completing Assignments","text":"<ol> <li>Navigate to the \"Assignments\" section</li> <li>Select an assignment to work on</li> <li>Read the instructions and complete the required tasks</li> <li>Submit your assignment before the deadline</li> <li>Wait for instructor feedback and grading</li> </ol>"},{"location":"USER_GUIDE/#tracking-progress","title":"Tracking Progress","text":"<ol> <li>View your overall progress on the dashboard</li> <li>Check individual course progress in the course details</li> <li>Review completed assignments and grades in the \"Grades\" section</li> </ol>"},{"location":"USER_GUIDE/#instructor-features","title":"Instructor Features","text":""},{"location":"USER_GUIDE/#dashboard_1","title":"Dashboard","text":"<p>The instructor dashboard provides an overview of your teaching activities:</p> <ul> <li>Active Students: Shows the number of students enrolled in your courses</li> <li>Active Courses: Displays the number of courses you're currently teaching</li> <li>Pending Assignments: Shows assignments that need to be graded</li> <li>Recent Activity: Lists recent activities related to your courses</li> </ul>"},{"location":"USER_GUIDE/#managing-courses","title":"Managing Courses","text":""},{"location":"USER_GUIDE/#creating-a-new-course","title":"Creating a New Course","text":"<ol> <li>Navigate to the \"Courses\" section</li> <li>Click \"Create New Course\"</li> <li>Fill out the course details:</li> <li>Title</li> <li>Description</li> <li>Category</li> <li>Thumbnail image (optional)</li> <li>Click \"Create\" to save the course</li> </ol>"},{"location":"USER_GUIDE/#adding-course-content","title":"Adding Course Content","text":"<ol> <li>Select the course you want to edit</li> <li>Click \"Add Module\" to create a new section</li> <li>Add a title and description for the module</li> <li>Click \"Add Content\" to add:</li> <li>Text lessons</li> <li>Video content</li> <li>Downloadable resources</li> <li>Quizzes</li> <li>Save your changes</li> </ol>"},{"location":"USER_GUIDE/#managing-assignments","title":"Managing Assignments","text":""},{"location":"USER_GUIDE/#creating-assignments","title":"Creating Assignments","text":"<ol> <li>Navigate to the \"Assignments\" section</li> <li>Click \"Create New Assignment\"</li> <li>Select the course the assignment belongs to</li> <li>Fill out the assignment details:</li> <li>Title</li> <li>Instructions</li> <li>Due date</li> <li>Points possible</li> <li>Click \"Create\" to publish the assignment</li> </ol>"},{"location":"USER_GUIDE/#grading-assignments","title":"Grading Assignments","text":"<ol> <li>Navigate to the \"Assignments\" section</li> <li>Select \"Pending Submissions\"</li> <li>Choose an assignment to grade</li> <li>Review the student's submission</li> <li>Provide a grade and feedback</li> <li>Click \"Submit\" to finalize the grade</li> </ol>"},{"location":"USER_GUIDE/#monitoring-student-progress","title":"Monitoring Student Progress","text":"<ol> <li>Navigate to the \"Students\" section</li> <li>View a list of students enrolled in your courses</li> <li>Click on a student to view their:</li> <li>Course progress</li> <li>Assignment completion</li> <li>Grades</li> <li>Activity timeline</li> </ol>"},{"location":"USER_GUIDE/#administrator-features","title":"Administrator Features","text":""},{"location":"USER_GUIDE/#dashboard_2","title":"Dashboard","text":"<p>The admin dashboard provides an overview of the entire learning platform:</p> <ul> <li>Total Users: Shows the number of registered users</li> <li>Active Courses: Displays the number of published courses</li> <li>Total Instructors: Shows the number of instructors on the platform</li> <li>Recent Activity: Lists recent system-wide activities</li> </ul>"},{"location":"USER_GUIDE/#user-management","title":"User Management","text":""},{"location":"USER_GUIDE/#viewing-users","title":"Viewing Users","text":"<ol> <li>Navigate to the \"Users\" section</li> <li>View a list of all users with their:</li> <li>Name</li> <li>Email</li> <li>Roles</li> <li>Current role</li> <li>Registration date</li> </ol>"},{"location":"USER_GUIDE/#managing-user-roles","title":"Managing User Roles","text":"<ol> <li>Navigate to the \"Users\" section</li> <li>Find the user you want to modify</li> <li>Check or uncheck the role checkboxes (admin, instructor, student)</li> <li>The changes are saved automatically</li> </ol>"},{"location":"USER_GUIDE/#creating-new-users","title":"Creating New Users","text":"<ol> <li>Navigate to the \"Users\" section</li> <li>Click \"Add User\"</li> <li>Fill out the user details:</li> <li>Name</li> <li>Email</li> <li>Password</li> <li>Roles</li> <li>Click \"Create\" to add the user</li> </ol>"},{"location":"USER_GUIDE/#course-management","title":"Course Management","text":""},{"location":"USER_GUIDE/#approving-courses","title":"Approving Courses","text":"<ol> <li>Navigate to the \"Courses\" section</li> <li>View courses pending approval</li> <li>Review the course content and details</li> <li>Click \"Approve\" or \"Reject\" with feedback</li> </ol>"},{"location":"USER_GUIDE/#featured-courses","title":"Featured Courses","text":"<ol> <li>Navigate to the \"Courses\" section</li> <li>Find the course you want to feature</li> <li>Toggle the \"Featured\" switch</li> <li>Featured courses will appear on the homepage</li> </ol>"},{"location":"USER_GUIDE/#system-settings","title":"System Settings","text":"<ol> <li>Navigate to the \"Settings\" section</li> <li>Modify system-wide settings:</li> <li>Site name and branding</li> <li>Email templates</li> <li>Notification settings</li> <li>Integration settings</li> <li>Save your changes</li> </ol>"},{"location":"USER_GUIDE/#common-features","title":"Common Features","text":""},{"location":"USER_GUIDE/#profile-management","title":"Profile Management","text":"<ol> <li>Click on your name in the top-right corner</li> <li>Select \"Profile\" from the dropdown menu</li> <li>Update your:</li> <li>Profile picture</li> <li>Name</li> <li>Email</li> <li>Password</li> <li>Click \"Save\" to update your profile</li> </ol>"},{"location":"USER_GUIDE/#notifications","title":"Notifications","text":"<ol> <li>Click the bell icon in the top navigation bar</li> <li>View your unread notifications</li> <li>Click on a notification to view details</li> <li>Mark notifications as read</li> </ol>"},{"location":"USER_GUIDE/#messages","title":"Messages","text":"<ol> <li>Click the message icon in the top navigation bar</li> <li>View your conversations</li> <li>Start a new conversation by clicking \"New Message\"</li> <li>Select a recipient and write your message</li> <li>Click \"Send\" to deliver your message</li> </ol>"},{"location":"USER_GUIDE/#mobile-usage","title":"Mobile Usage","text":"<p>The AiluroCamp LMS is fully responsive and can be used on mobile devices:</p> <ol> <li>Open your mobile browser</li> <li>Navigate to the AiluroCamp URL</li> <li>Log in with your credentials</li> <li>Use the mobile menu (hamburger icon) to navigate</li> <li>All features are available, optimized for smaller screens</li> </ol>"},{"location":"USER_GUIDE/#troubleshooting","title":"Troubleshooting","text":""},{"location":"USER_GUIDE/#login-issues","title":"Login Issues","text":"<ul> <li>Forgot Password: Click \"Forgot password?\" on the login page to reset</li> <li>Account Locked: Contact an administrator if your account is locked</li> <li>Email Not Recognized: Ensure you're using the email you registered with</li> </ul>"},{"location":"USER_GUIDE/#course-access-problems","title":"Course Access Problems","text":"<ul> <li>Course Not Visible: Check if you're enrolled or if the course is published</li> <li>Content Not Loading: Try refreshing the page or clearing your browser cache</li> <li>Assignment Submission Errors: Ensure you've completed all required fields</li> </ul>"},{"location":"USER_GUIDE/#technical-issues","title":"Technical Issues","text":"<ul> <li>Page Not Loading: Check your internet connection</li> <li>Error Messages: Note the exact error message to report to support</li> <li>Browser Compatibility: Try using a different browser (Chrome, Firefox, Safari)</li> </ul>"},{"location":"USER_GUIDE/#getting-help","title":"Getting Help","text":"<p>If you encounter issues not covered in this guide:</p> <ol> <li>Check the FAQ section in the Help Center</li> <li>Use the \"Contact Support\" form</li> <li>Email support@ailurocamp.com with details of your issue</li> </ol> <p>This guide covers the basic functionality of the AiluroCamp LMS. Features may be updated or expanded in future versions.</p>"},{"location":"api/","title":"API Documentation","text":"<p>This document provides details about the API endpoints available in the AiluroCamp Learning Management System.</p>"},{"location":"api/#authentication-endpoints","title":"Authentication Endpoints","text":""},{"location":"api/#post-apiauthregister","title":"POST /api/auth/register","text":"<p>Register a new user.</p> <p>Request Body:</p> <pre><code>{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"securepassword\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"message\": \"User registered successfully\"\n}\n</code></pre>"},{"location":"api/#post-apiauthlogin","title":"POST /api/auth/login","text":"<p>Authenticate a user.</p> <p>Request Body:</p> <pre><code>{\n  \"email\": \"john@example.com\",\n  \"password\": \"securepassword\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"token\": \"jwt_token_here\",\n  \"user\": {\n    \"id\": \"user_id\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"roles\": [\"student\"]\n  }\n}\n</code></pre>"},{"location":"api/#user-management-endpoints","title":"User Management Endpoints","text":""},{"location":"api/#get-apiusers","title":"GET /api/users","text":"<p>Get all users (admin only).</p> <p>Response:</p> <pre><code>{\n  \"users\": [\n    {\n      \"id\": \"user_id\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\",\n      \"roles\": [\"student\"]\n    }\n  ]\n}\n</code></pre>"},{"location":"api/#get-apiusersid","title":"GET /api/users/:id","text":"<p>Get a specific user.</p> <p>Response:</p> <pre><code>{\n  \"id\": \"user_id\",\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"roles\": [\"student\"]\n}\n</code></pre>"},{"location":"api/#course-management-endpoints","title":"Course Management Endpoints","text":""},{"location":"api/#get-apicourses","title":"GET /api/courses","text":"<p>Get all courses.</p> <p>Response:</p> <pre><code>{\n  \"courses\": [\n    {\n      \"id\": \"course_id\",\n      \"title\": \"Introduction to Programming\",\n      \"description\": \"Learn the basics of programming\",\n      \"instructor\": \"instructor_id\",\n      \"enrolledStudents\": [\"student_id\"]\n    }\n  ]\n}\n</code></pre>"},{"location":"api/#post-apicourses","title":"POST /api/courses","text":"<p>Create a new course (instructor only).</p> <p>Request Body:</p> <pre><code>{\n  \"title\": \"Introduction to Programming\",\n  \"description\": \"Learn the basics of programming\",\n  \"modules\": [\n    {\n      \"title\": \"Module 1\",\n      \"content\": \"Content for module 1\"\n    }\n  ]\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"id\": \"course_id\",\n  \"title\": \"Introduction to Programming\",\n  \"description\": \"Learn the basics of programming\",\n  \"instructor\": \"instructor_id\",\n  \"modules\": [\n    {\n      \"title\": \"Module 1\",\n      \"content\": \"Content for module 1\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/#assignment-management-endpoints","title":"Assignment Management Endpoints","text":""},{"location":"api/#get-apicoursescourseidassignments","title":"GET /api/courses/:courseId/assignments","text":"<p>Get all assignments for a course.</p> <p>Response:</p> <pre><code>{\n  \"assignments\": [\n    {\n      \"id\": \"assignment_id\",\n      \"title\": \"Assignment 1\",\n      \"description\": \"Complete the exercises\",\n      \"dueDate\": \"2023-12-31T23:59:59Z\",\n      \"points\": 100\n    }\n  ]\n}\n</code></pre>"},{"location":"api/#post-apicoursescourseidassignments","title":"POST /api/courses/:courseId/assignments","text":"<p>Create a new assignment (instructor only).</p> <p>Request Body:</p> <pre><code>{\n  \"title\": \"Assignment 1\",\n  \"description\": \"Complete the exercises\",\n  \"dueDate\": \"2023-12-31T23:59:59Z\",\n  \"points\": 100\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"id\": \"assignment_id\",\n  \"title\": \"Assignment 1\",\n  \"description\": \"Complete the exercises\",\n  \"dueDate\": \"2023-12-31T23:59:59Z\",\n  \"points\": 100\n}\n</code></pre>"},{"location":"api/#error-handling","title":"Error Handling","text":"<p>All API endpoints follow a consistent error response format:</p> <pre><code>{\n  \"message\": \"Error message describing what went wrong\",\n  \"error\": \"Optional detailed error information\"\n}\n</code></pre> <p>Common HTTP status codes:</p> <ul> <li><code>200 OK</code>: Request succeeded</li> <li><code>201 Created</code>: Resource created successfully</li> <li><code>400 Bad Request</code>: Invalid input or parameters</li> <li><code>401 Unauthorized</code>: Authentication required</li> <li><code>403 Forbidden</code>: Insufficient permissions</li> <li><code>404 Not Found</code>: Resource not found</li> <li><code>500 Internal Server Error</code>: Server-side error</li> </ul>"},{"location":"api/#rate-limiting","title":"Rate Limiting","text":"<p>API requests are subject to rate limiting to prevent abuse:</p> <ul> <li>100 requests per minute per IP address</li> <li>1000 requests per hour per user</li> </ul> <p>Exceeding these limits will result in a <code>429 Too Many Requests</code> response.</p>"},{"location":"api/#authentication","title":"Authentication","text":"<p>Most API endpoints require authentication using JWT tokens. Include the token in the request cookies (handled automatically by NextAuth.js when using the client-side libraries).</p>"},{"location":"api/#api-versioning","title":"API Versioning","text":"<p>The current API version is v1 (implicit in the paths). Future versions will be explicitly versioned (e.g., <code>/api/v2/courses</code>).</p>"},{"location":"api/#development-and-testing","title":"Development and Testing","text":"<p>For local development and testing, the API is available at <code>http://localhost:3000/api/</code>.</p> <p>For production, the API endpoints depend on your deployment configuration.</p>"},{"location":"architecture/","title":"Architecture","text":"<p>This document provides a technical overview of the AiluroCamp Learning Management System architecture.</p>"},{"location":"architecture/#system-design","title":"System Design","text":"<p>AiluroCamp is built using a modern web application architecture:</p> <ul> <li>Frontend: Next.js with React and TypeScript</li> <li>Backend: Next.js API routes (serverless functions)</li> <li>Database: MongoDB with Mongoose ODM</li> <li>Authentication: NextAuth.js with JWT</li> </ul>"},{"location":"architecture/#core-components","title":"Core Components","text":""},{"location":"architecture/#frontend-components","title":"Frontend Components","text":"<ul> <li>Layout Components: Shared UI elements like headers, footers, and navigation</li> <li>Page Components: Main page content for different routes</li> <li>Feature Components: Reusable components for specific features</li> <li>UI Components: Basic UI elements like buttons, forms, and cards</li> </ul>"},{"location":"architecture/#backend-components","title":"Backend Components","text":"<ul> <li>API Routes: Serverless functions for handling API requests</li> <li>Authentication: User authentication and authorization</li> <li>Database Models: Mongoose schemas for data modeling</li> <li>Middleware: Request processing and validation</li> </ul>"},{"location":"architecture/#data-flow","title":"Data Flow","text":"<ol> <li>User interacts with the frontend</li> <li>Frontend makes API requests to the backend</li> <li>Backend validates the request and authenticates the user</li> <li>Backend interacts with the database</li> <li>Backend returns data to the frontend</li> <li>Frontend updates the UI</li> </ol>"},{"location":"architecture/#security-considerations","title":"Security Considerations","text":"<ul> <li>Authentication: JWT-based authentication with NextAuth.js</li> <li>Authorization: Role-based access control</li> <li>Data Validation: Input validation on both client and server</li> <li>HTTPS: Secure communication between client and server</li> <li>Environment Variables: Secure storage of sensitive information</li> </ul>"},{"location":"setup/","title":"Setup Guide","text":"<p>This guide provides instructions for setting up the AiluroCamp Learning Management System.</p>"},{"location":"setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>Node.js 18 or later</li> <li>npm or yarn</li> <li>Git</li> <li>MongoDB (for development)</li> </ul>"},{"location":"setup/#installation","title":"Installation","text":"<ol> <li>Clone the repository:</li> </ol> <pre><code>git clone https://github.com/ailurotech/ailurocamp.git\ncd ailurocamp\n</code></pre> <ol> <li>Install dependencies:</li> </ol> <pre><code>npm install\n# or\nyarn install\n</code></pre> <ol> <li>Set up environment variables:</li> </ol> <p>Create a <code>.env.local</code> file in the root directory with the following variables:</p> <pre><code>MONGODB_URI=your_mongodb_connection_string\nNEXTAUTH_SECRET=your_nextauth_secret\nNEXTAUTH_URL=http://localhost:3000\n</code></pre> <ol> <li>Run the development server:</li> </ol> <pre><code>npm run dev\n# or\nyarn dev\n</code></pre> <p>The application will be available at http://localhost:3000.</p>"},{"location":"setup/#deployment","title":"Deployment","text":"<p>For deployment instructions, please refer to the GitHub Pages deployment guide.</p>"},{"location":"typescript/","title":"TypeScript Type System","text":"<p>This document explains the type system used in AiluroCamp and how we leverage TypeScript to create a type-safe application.</p>"},{"location":"typescript/#overview","title":"Overview","text":"<p>AiluroCamp uses TypeScript to provide static type checking, improving code quality and developer experience. Our type system is designed to:</p> <ul> <li>Ensure consistency across the application</li> <li>Prevent common runtime errors</li> <li>Provide better IDE support with autocompletion</li> <li>Document the expected shape of data</li> <li>Make refactoring safer and easier</li> </ul>"},{"location":"typescript/#types-folder-structure","title":"Types Folder Structure","text":"<p>The <code>src/app/types</code> directory contains all shared TypeScript interfaces and type definitions used throughout the application. This centralized approach ensures consistency and makes it easier to maintain and update types as the application evolves.</p>"},{"location":"typescript/#key-type-definitions","title":"Key Type Definitions","text":""},{"location":"typescript/#user-types-srcapptypesuserts","title":"User Types (<code>src/app/types/user.ts</code>)","text":"<pre><code>export interface User {\n  id: string;\n  name: string;\n  email: string;\n  roles: UserRole[];\n  currentRole: UserRole;\n}\n\nexport type UserRole = 'admin' | 'instructor' | 'student';\n\nexport interface UpdateUserRolesRequest {\n  userId: string;\n  roles: UserRole[];\n}\n\nexport interface UsersResponse {\n  users: User[];\n}\n</code></pre> <p>These types define:</p> <ul> <li>The structure of a user object</li> <li>The possible user roles as a union type</li> <li>Request and response formats for user-related API calls</li> </ul>"},{"location":"typescript/#authentication-types","title":"Authentication Types","text":"<pre><code>interface CustomUser extends NextAuthUser {\n  id: string;\n  roles: UserRole[];\n  currentRole: UserRole;\n}\n\ninterface CustomSession extends Session {\n  user: CustomUser;\n}\n\ninterface CustomToken extends JWT {\n  id: string;\n  roles: UserRole[];\n  currentRole: UserRole;\n}\n</code></pre> <p>These types extend the NextAuth.js types to include our custom properties like roles and currentRole.</p>"},{"location":"typescript/#using-types-in-the-application","title":"Using Types in the Application","text":""},{"location":"typescript/#in-react-components","title":"In React Components","text":"<pre><code>// Example of a typed component\nexport default function UsersPage() {\n  const [users, setUsers] = useState&lt;User[]&gt;([]);\n\n  const handleRoleChange = async (\n    userId: string,\n    roles: UserRole[]\n  ): Promise&lt;void&gt; =&gt; {\n    // Implementation\n  };\n\n  // Rest of component\n}\n</code></pre>"},{"location":"typescript/#in-api-routes","title":"In API Routes","text":"<pre><code>// Example of a typed API route\ninterface SwitchRoleRequest {\n  newRole: UserRole;\n}\n\nexport async function POST(req: Request) {\n  const data: SwitchRoleRequest = await req.json();\n  // Implementation\n}\n</code></pre>"},{"location":"typescript/#type-safety-best-practices","title":"Type Safety Best Practices","text":""},{"location":"typescript/#1-use-explicit-return-types","title":"1. Use Explicit Return Types","text":"<p>Always specify return types for functions, especially for async functions:</p> <pre><code>async function fetchUsers(): Promise&lt;User[]&gt; {\n  // Implementation\n}\n</code></pre>"},{"location":"typescript/#2-use-type-guards","title":"2. Use Type Guards","text":"<p>Use type guards to narrow types when necessary:</p> <pre><code>function isAdmin(user: User): boolean {\n  return user.roles.includes('admin');\n}\n\nif (isAdmin(currentUser)) {\n  // TypeScript knows currentUser has admin role\n}\n</code></pre>"},{"location":"typescript/#3-avoid-any","title":"3. Avoid <code>any</code>","text":"<p>Avoid using the <code>any</code> type as it defeats the purpose of TypeScript. Use <code>unknown</code> instead when the type is truly not known, then narrow it down:</p> <pre><code>// Instead of:\nfunction processData(data: any) {\n  /* ... */\n}\n\n// Use:\nfunction processData(data: unknown) {\n  if (typeof data === 'string') {\n    // Now TypeScript knows data is a string\n  }\n}\n</code></pre>"},{"location":"typescript/#4-use-discriminated-unions","title":"4. Use Discriminated Unions","text":"<p>For complex state management, use discriminated unions:</p> <pre><code>type RequestState =\n  | { status: 'idle' }\n  | { status: 'loading' }\n  | { status: 'success'; data: User[] }\n  | { status: 'error'; error: string };\n</code></pre>"},{"location":"typescript/#5-leverage-generics","title":"5. Leverage Generics","text":"<p>Use generics for reusable components and functions:</p> <pre><code>async function fetchData&lt;T&gt;(url: string): Promise&lt;T&gt; {\n  const response = await fetch(url);\n  return response.json();\n}\n\n// Usage\nconst users = await fetchData&lt;User[]&gt;('/api/users');\n</code></pre>"},{"location":"typescript/#mongodb-and-mongoose-types","title":"MongoDB and Mongoose Types","text":"<p>We use Mongoose with TypeScript to ensure type safety with our database operations:</p> <pre><code>export interface IUser extends mongoose.Document {\n  email: string;\n  password: string;\n  name: string;\n  roles: ('admin' | 'instructor' | 'student')[];\n  currentRole: 'admin' | 'instructor' | 'student';\n  avatar?: string;\n  createdAt: Date;\n  updatedAt: Date;\n  comparePassword(candidatePassword: string): Promise&lt;boolean&gt;;\n}\n</code></pre> <p>This interface extends Mongoose's Document type and defines the shape of our User documents, including methods like <code>comparePassword</code>.</p>"},{"location":"typescript/#benefits-of-our-type-system","title":"Benefits of Our Type System","text":"<ol> <li>Error Prevention: Catches type-related errors at compile time</li> <li>Self-Documentation: Types serve as documentation for data structures</li> <li>Refactoring Confidence: Makes large-scale changes safer</li> <li>IDE Support: Provides excellent autocompletion and inline documentation</li> <li>Team Collaboration: Makes it easier for team members to understand the codebase</li> </ol>"},{"location":"typescript/#further-reading","title":"Further Reading","text":"<ul> <li>TypeScript Handbook</li> <li>NextAuth.js TypeScript Guide</li> <li>Mongoose TypeScript Integration</li> </ul>"},{"location":"user-guide/","title":"User Guide","text":"<p>This guide provides instructions for using the AiluroCamp Learning Management System for all user roles.</p>"},{"location":"user-guide/#student-features","title":"Student Features","text":"<ul> <li>Enrolling in courses</li> <li>Viewing course materials</li> <li>Submitting assignments</li> <li>Tracking progress</li> <li>Earning certificates</li> </ul>"},{"location":"user-guide/#instructor-features","title":"Instructor Features","text":"<ul> <li>Creating and managing courses</li> <li>Adding course content</li> <li>Creating assignments</li> <li>Grading student work</li> <li>Monitoring student progress</li> </ul>"},{"location":"user-guide/#administrator-features","title":"Administrator Features","text":"<ul> <li>Managing users</li> <li>Approving courses</li> <li>System settings</li> <li>Analytics and reporting</li> </ul>"},{"location":"user-guide/#common-features","title":"Common Features","text":"<ul> <li>Profile management</li> <li>Notifications</li> <li>Messaging</li> <li>Mobile access</li> </ul>"}]}